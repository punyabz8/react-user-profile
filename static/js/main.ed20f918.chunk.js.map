{"version":3,"sources":["images/profileImage.png","components/Card.js","components/Main.js","components/Header.js","components/DetailInfo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","List","user","this","props","key","id","title","onClick","clicked","bind","src","profileImage","alt","firstName","lastName","phone","email","React","Component","Main","className","users","map","Header","userDetail","goBack","DetailInfo","address","city","state","country","streetAddress","zipCode","countryCode","EnhancedPage","Fragment","App","setState","detailClicked","detailClickedValue","console","log","isLoaded","filter","style","paddingTop","fontSize","fetch","then","response","json","resJson","catch","error","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ed20f918.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profileImage.6b002231.png\";","import React from 'react'\r\nimport profileImage from '../images/profileImage.png'\r\n\r\nexport default class List extends React.Component{\r\n  render(){\r\n    const { user } = this.props;\r\n    return(\r\n      <li key = { user.id } title = \"Click to see more details\" onClick = { this.props.clicked.bind(this, user.id) }>\r\n        <img src = { user.profileImage } alt = { profileImage } />\r\n        <p>{ user.firstName + ' ' + user.lastName }</p>\r\n        <p>{ 'Contact No: ' + user.phone }</p>\r\n        <p>{ \"Email: \" + user.email } </p>\r\n      </li>\r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport Card from './Card'\r\n\r\nexport default class Main extends React.Component{\r\n  render(){\r\n    return(\r\n      <div className = 'flex-container main-container'>\r\n        <ul className = 'list-style first-element'>\r\n          { this.props.users.map((user) =>{\r\n          return <Card key = { user.id } user = { user } clicked = { this.props.clicked } />})}\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react'\r\n\r\nexport default class Header extends React.Component{\r\n  render(){\r\n    return(\r\n      <header>\r\n        {this.props.userDetail ? <div><i className=\"fa fa-arrow-left\" onClick = { this.props.goBack }></i></div> : false }\r\n        <p className = { this.props.userDetail ? 'detailActive' : '' } >{ this.props.title }</p>\r\n      </header>\r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport Header from './Header'\r\nimport profileImage from '../images/profileImage.png'\r\n\r\nexport default class DetailInfo extends React.Component{\r\n  \r\n  render(){\r\n    const { user } = this.props;\r\n    const { address } = user[0];\r\n    return(\r\n      <div className = 'person-detail'>\r\n        <Header title = { user[0].firstName + ' ' + user[0].lastName } userDetail = { true } goBack = { this.props.goBack } />\r\n        <div className = \"main-person-detail\">\r\n          <div className = \"main-person-image\">\r\n            <div className = \"background-cover\">\r\n              <img src = { user[0].profileImage } alt = { profileImage } />\r\n            </div>\r\n            <img src = { user[0].profileImage } alt = { profileImage } />\r\n          </div>\r\n          <div className = 'detail-margin'>\r\n            <label className =\"border\">Address </label>\r\n            <label>City </label><p>{ address.city }</p>\r\n            <label>State </label><p>{ address.state }</p>\r\n            <label>Country </label><p>{ address.country }</p>\r\n            <label>Street Address </label><p>{ address.streetAddress }</p>\r\n            <label>Zip Code | Country Code </label><p>{ address.zipCode + ' | ' + address.countryCode }</p>\r\n            <label className =\"border\">Contact </label>\r\n            <label>Phone No. </label><p>{ user[0].phone }</p>\r\n            <label>Email </label><p>{ user[0].email }</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n  }\r\n}","import React from 'react';\nimport './App.css';\nimport Main from './components/Main'\nimport Header from './components/Header'\nimport DetailInfo from './components/DetailInfo'\n\nfunction withHeader(Component){\n  return function(props){\n    return (\n      <React.Fragment>\n        <Header title = 'People' />\n        <Component {...props} clicked = { props.clicked } />\n      </React.Fragment>\n    );\n  };\n}\n\nconst EnhancedPage = withHeader(Main);\n\nexport default class App extends React.Component{\n  constructor(){\n    super();\n    this.state = {\n      users: [\n        {\n          \"id\": 1,\n          \"email\": \"jaydon_gislason59@yahoo.com\",\n          \"phone\": \"(998) 970-2799\",\n          \"address\": {\n            \"city\": \"South Nyah\",\n            \"state\": \"New York\",\n            \"country\": \"Equatorial Guinea\",\n            \"zipCode\": \"16308-9260\",\n            \"countryCode\": \"AX\",\n            \"streetAddress\": \"3585 Lucinda Valleys\"\n          },\n          \"lastName\": \"Von\",\n          \"firstName\": \"Walter\",\n          \"profileImage\": \"https://s3.amazonaws.com/uifaces/faces/twitter/jeremyworboys/128.jpg\"\n        },\n        {\n          \"id\": 2,\n          \"email\": \"jaydon_gislason59@yahoo.com\",\n          \"phone\": \"(998) 970-2799\",\n          \"address\": {\n            \"city\": \"South Nyah\",\n            \"state\": \"New York\",\n            \"country\": \"Equatorial Guinea\",\n            \"zipCode\": \"16308-9260\",\n            \"countryCode\": \"AX\",\n            \"streetAddress\": \"3585 Lucinda Valleys\"\n          },\n          \"lastName\": \"Von\",\n          \"firstName\": \"Walter\",\n          \"profileImage\": \"https://s3.amazonaws.com/uifaces/faces/twitter/jeremyworboys/128.jpg\"\n        }\n      ],\n      isLoaded: false,\n      detailClicked: false,\n      detailClickedValue: 1\n    }\n  }\n  clicked = (id) =>{\n    this.setState({detailClicked: !this.state.detailClicked, detailClickedValue: id})\n    console.log(id)\n  }\n  goBack = () =>{\n    console.log('clicked')\n    this.setState({detailClicked: !this.state.detailClicked, detailClickedValue: null})\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        { this.state.isLoaded === true ?  this.state.detailClicked ? \n        <DetailInfo user = { this.state.users.filter((user) =>{\n          return user.id === this.state.detailClickedValue; }) } goBack = { this.goBack }/> : \n        <EnhancedPage users = {this.state.users} clicked = { this.clicked } /> : \n        <div>\n          <Header title = 'People' /> \n          <p style={{paddingTop: '70px', fontSize: '20px'}} >Data is loading...</p> \n        </div> \n        }\n      </div>\n    );\n  }\n  componentDidMount(){\n    return fetch(\"https://mock-io.herokuapp.com/users\").then((response) => response.json()).then((resJson) =>{\n      this.setState({users: [...resJson], isLoaded: true})\n    })\n    .catch((error) =>{\n      console.log(error);\n    })\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './styles/reset.css'\nimport 'font-awesome/css/font-awesome.css'\nimport './styles/style.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();"],"sourceRoot":""}